http {
    
    lua_shared_dict globe_data 1M;
    
    lua_package_path "${prefix}/?.lua;;";
    
    server {
    
        lua_need_request_body on;
    
        init_by_lua '
            cjson = require "cjson"
            globe_data = ngx.shared.globe_data;
        ';
    
        log_by_lua_file '
            local location = cjson.decode(ngx.req.get_body_data()).device.geo
            if not globe_data:incr(string.format("%.0f,%.0f", location.lat, location.lon), 1) then
              globe_data:add(key, 1)
            end
        ';
       
        location / {
            return 204 "";
        }
       
        location /globe_data/ {
            content_by_lua '
                local locations = globe_data:get_keys(0)
                local data_json = {}
                for k,v in pairs(keys) do
                    table.insert(data_json, v..",",requests_counter:get(v));
                end
                ngx.say(cjson.encode(data_json))
                globe_data:flush_all()
            ';
            allow 127.0.0.1;
            deny  all;
        }
        
    }
}
